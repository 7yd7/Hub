function parseRarity(value)

    if type(value) == "string" then
        local suffix = value:sub(-1) 
        local number = tonumber(value:sub(1, -2)) 

        if suffix == "k" then
            return number * 1000
        elseif suffix == "m" then
            return number * 1000000
        elseif suffix == "b" then
            return number * 1000000000
        end
    end


    return tonumber(value) or 0
end


table.sort(petsToEquip, function(a, b)
    return parseRarity(a.rarity) < parseRarity(b.rarity)
end)


for _, pet in ipairs(petsToEquip) do
    local petId = pet.id
    local repeatCount = pet.repeatCount or 1
    
    for _ = 1, repeatCount do
        local args = {
            [1] = petId
        }
      
        game:GetService("ReplicatedStorage").Network.Pets_Equip:FireServer(unpack(args))
    end
end
